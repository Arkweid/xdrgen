// Automatically generated from #{@output.source_path}
// DO NOT EDIT or your changes may be overwritten

package <%= @namespace || "main" %>

import (
  "github.com/davecgh/go-xdr/xdr2"
)

// array decode sizes
const (
  XdrFixedSize = iota
  XdrVarSize
)


// Primitive decoders
<% PRIMITIVES.each do |xdr, go| %>

func Decode<%=xdr%>(decoder *xdr.Decoder, result *<%=go%>) (int, error) {
  val, bytesRead, err := decoder.Decode<%=xdr%>()

  if err == nil {
    *result = val
  }

  return bytesRead, err
}

func DecodeOptional<%=xdr%>(decoder *xdr.Decoder, result **<%=go%>) (int, error) {
  
  isPresent, presenceBytesRead, err := decoder.DecodeBool()

  if err != nil {
    return presenceBytesRead, err
  }

  if !isPresent {
    return presenceBytesRead, err
  }

  val, bytesRead, err := decoder.Decode<%=xdr%>()

  if err == nil {
    *result = &val
  }

  return bytesRead + presenceBytesRead, err
}

<% end %>